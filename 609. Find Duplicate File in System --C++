class Solution {
public:
    vector<vector<string>> findDuplicate(vector<string>& paths) {
        vector<vector<string>> res;
        unordered_map<string, vector<string>> fm;
        for (string p : paths) {
            stringstream ss(p);
            string pre = "", s = "";
            getline (ss, pre, ' ');
            while (getline (ss, s, ' ')) {
                int idx = s.find('(');
                string dir = pre + "/" + s.substr(0, idx);
                string content = s.substr(idx+1, s.find(')') - idx - 1);
                fm[content].push_back(dir);
            }
        }
        for (auto m : fm) {
            if (m.second.size() > 1) {
                res.push_back(m.second);
            }
        }
        return res;
    }
};
